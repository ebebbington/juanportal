const express = require('express')
const http = require('http')
const app = require('.././app')
require('dotenv').config()
const port = process.env.NODE_PORT || 3006
const logger = require('.././helpers/logger')

app.set('port', port)

//create http server
const server = http.createServer(app);
server.listen(port);
server.on("error", onError);
server.on("listening", onListening);

/**
 * On server error
 *
 * @param error The error object
 * @return {void}
 */
function onError(error) {
    if (error.syscall !== 'listen') {
        throw error
    }
    const bind = typeof this.port === 'string'
        ? 'Pipe ' + this.port
        : 'Port ' + this.port

    // handle specific listen errors with friendly messages
    switch (error.code) {
        case 'EACCES':
            logger.error(bind + ' requires elevated privileges')
            process.exit(1)
            break
        case 'EADDRINUSE':
            logger.error(bind + ' is already in use')
            process.exit(1)
            break
        default:
            throw error
    }
}

/**
 * On server listening
 *
 * @return {void}
 */
function onListening() {
    const addr = server.address()
    const bind = typeof addr === 'string'
        ? 'pipe ' + addr
        : 'port ' + addr.port
    logger.info('Listening on ' + bind)
}